
import os
import sys
import re
import glob

#script, indir, runNum = sys.argv

#bedfile = "/home/yliu/resource/IDT_bed/Indel_Target_March16/indel_Mar16.bed"

class AutoVivification(dict):
    """Implementation of perl's autovivification feature."""
    def __getitem__(self, item):
        try:
            return dict.__getitem__(self, item)
        except KeyError:
            value = self[item] = type(self)()
            return value


def summaryVcf(indir="."):
    freqHash = AutoVivification()
    sampleList = []
    for filename in glob.glob(os.path.join(indir, '*.vcf')):
        filename0 = filename.replace("./", "")
        sampleid  = filename0.replace(".vcf", "")
        sampleList.append(sampleid)
        infile = open(filename, "r")
        for line in infile.readlines():
            if(re.search("^\#", line)):
                continue
            line = line.rstrip("\n")
            elem = line.split("\t")
            freq = elem[9].split(":")[3]
            freqHash[sampleid][str(elem[0])+"_"+str(elem[1])] = freq

    outf = open("summary_variants.txt", "w")
    variants = []
    for k1 in freqHash:
        for k2 in freqHash[k1]:
            variants.append(k2)
    unique = sorted(list(set(variants)))
    outf.write("variants\t")
    for s0 in sampleList:
        outf.write(str(s0)+"\t")
    outf.write("\n")
    for u in unique:
        outf.write(u+"\t")
        for s in sampleList:
            if u in freqHash[s]:
                outf.write(str(freqHash[s][u])+"\t")
            else:
                outf.write("NA"+"\t")
        outf.write("\n")
    outf.close()
#summaryVcf()

